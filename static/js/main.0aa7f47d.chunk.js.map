{"version":3,"sources":["utils/history.js","components/Auth/auth0-variables.js","components/Auth/LogoutBtn.js","components/Header.js","components/Todo/TodoItem.js","components/Todo/TodoFilters.js","components/Todo/TodoPrivateList.js","components/Todo/TodoInput.js","components/Todo/TodoPrivateWrapper.js","components/Todo/TaskItem.js","components/Todo/TodoPublicList.js","components/Todo/TodoPublicWrapper.js","components/OnlineUsers/OnlineUser.js","components/OnlineUsers/OnlineUsersWrapper.js","components/App.js","components/Auth/Callback.js","components/Auth/Login.js","components/Auth/Auth0Wrapper.js","index.js","components/Auth/loading.svg"],"names":["createHistory","AUTH_CONFIG","domain","clientId","callbackUrl","LogoutBtn","_ref","logoutHandler","react_default","a","createElement","Button","id","bsStyle","className","onClick","Header","Navbar","fluid","Brand","Nav","pullRight","NavItem","Auth_LogoutBtn","withApollo","index","todo","client","REMOVE_TODO","gql","_templateObject","TOGGLE_TODO","_templateObject2","checked","is_completed","type","onChange","mutate","mutation","variables","isCompleted","optimisticResponse","update","cache","newTodos","readQuery","query","GET_MY_TODOS","todos","map","t","Object","objectSpread","writeQuery","data","htmlFor","title","e","preventDefault","stopPropagation","filter","TodoFilters","currentFilter","filterResultsFn","clearCompletedFn","filterResultsHandler","clearCompletedButton","activeTodos","itemCount","length","TodoPrivateList_templateObject","TodoPrivateList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clearInProgress","filterResults","bind","assertThisInitialized","clearCompleted","setState","CLEAR_COMPLETED","TodoPrivateList_templateObject2","filteredTodos","todoList","forEach","push","Todo_TodoItem","key","react","Todo_TodoFilters","Component","TodoPrivateListQuery","react_apollo_esm","_ref2","loading","error","console","TodoPrivateList_TodoPrivateList","ADD_TODO","TodoInput_templateObject","TodoInput","input","_ref$isPublic","isPublic","_useState","useState","_useState2","slicedToArray","todoInput","setTodoInput","existingTodos","newTodo","insert_todos","returning","concat","toConsumableArray","onCompleted","focus","addTodo","_ref3","onSubmit","placeholder","value","target","ref","n","TodoPrivateWrapper","Todo_TodoInput","Todo_TodoPrivateList","TaskItem","user","name","_TodoPublicList","olderTodosAvailable","latestTodo","newTodosCount","loadNew","loadOlder","oldestTodoId","newestTodoId","_this2","GET_NEW_PUBLIC_TODOS","TodoPublicList_templateObject","latestVisibleId","then","catch","_this3","GET_OLD_PUBLIC_TODOS","TodoPublicList_templateObject2","prevProps","Todo_TaskItem","newTodosNotification","toString","olderTodosMsg","TodoPublicList","NOTIFY_NEW_PUBLIC_TODOS","_templateObject3","TodoPublicListSubscription","subscription","TodoPublicWrapper","Todo_TodoPublicList","OnlineUser","OnlineUsersWrapper","UPDATE_LASTSEEN_MUTATION","OnlineUsersWrapper_templateObject","now","Date","toISOString","onlineIndicator","setInterval","updateLastSeen","OnlineUsersWrapper_templateObject2","users","online_users","onlineUsersList","u","OnlineUsers_OnlineUser","App","authToken","auth","idToken","ApolloClient","link","WebSocketLink","uri","options","reconnect","connectionParams","headers","Authorization","InMemoryCache","components_Header","logout","Todo_TodoPrivateWrapper","Todo_TodoPublicWrapper","OnlineUsers_OnlineUsersWrapper","Callback","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","src","alt","Login","loginHandler","Auth0Wrapper","auth0","WebAuth","clientID","redirectUri","audience","responseType","scope","handleAuthentication","isAuthenticated","parseHash","err","authResult","accessToken","setSession","alert","errorDescription","login","isExpired","getAccessToken","getIdToken","renewSession","authorize","localStorage","setItem","expiresAt","expiresIn","getTime","history","replace","checkSession","log","error_description","removeItem","return_to","window","location","origin","pathname","startsWith","test","hash","getItem","Auth_Callback","components_App","assign","Auth_Login","React","mainRoutes","Router","Route","path","render","Auth0Wrapper_Auth0Wrapper","ReactDOM","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0aa7f47d.chunk.js","sourcesContent":["import createHistory from \"history/createBrowserHistory\";\n\nexport default createHistory();\n","export const AUTH_CONFIG = {\n  domain: 'graphql-tutorials.auth0.com',\n  clientId: 'P38qnFo1lFAQJrzkun--wEzqljVNGcWW',\n  callbackUrl: 'http://localhost:3000/callback'\n};\n","import React from 'react';\nimport {Button} from \"react-bootstrap\";\n\nconst LogoutBtn = ({logoutHandler}) => (\n  <Button\n    id=\"qsLogoutBtn\"\n    bsStyle=\"primary\"\n    className=\"btn-margin logoutBtn\"\n    onClick={logoutHandler}\n  >\n    Log Out\n  </Button>\n);\n\nexport default LogoutBtn;\n","import React from 'react';\nimport {Nav, Navbar, NavItem} from 'react-bootstrap';\nimport LogoutBtn from './Auth/LogoutBtn';\n\nconst Header = ({logoutHandler}) => (\n  <Navbar fluid className=\"m-bottom-0\">\n    <Navbar.Header className=\"navHeader\">\n      <Navbar.Brand className=\"navBrand\">\n        GraphQL Tutorial App\n      </Navbar.Brand>\n\n      <Nav pullRight>\n        <NavItem>\n          <LogoutBtn logoutHandler={logoutHandler} />\n        </NavItem>\n      </Nav>\n    </Navbar.Header>\n  </Navbar>\n);\n\nexport default Header;\n","import React from 'react';\nimport { withApollo } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { GET_MY_TODOS } from './TodoPrivateList';\n\nconst TodoItem = ({ index, todo, client }) => {\n\n  const REMOVE_TODO = gql`\n    mutation removeTodo ($id: Int!) {\n      delete_todos(where: {id: {_eq: $id}}) {\n        affected_rows\n      }\n    }\n  `;\n\n  const removeTodo = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    client.mutate({\n      mutation: REMOVE_TODO,\n      variables: { id: todo.id },\n      optimisticResponse: {},\n      update: (cache) => {\n        const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n        const newTodos = existingTodos.todos.filter(t => (t.id !== todo.id));\n        cache.writeQuery({\n          query: GET_MY_TODOS,\n          data: { todos: newTodos }\n        });\n      }\n    });\n  };\n\n\n\n  const TOGGLE_TODO = gql`\n  mutation toggleTodo ($id: Int!, $isCompleted: Boolean!) {\n    update_todos(where: {id: {_eq: $id}}, _set: {is_completed: $isCompleted}) {\n      affected_rows\n    }\n  }\n`;\n\n  const toggleTodo = () => {\n    client.mutate({\n      mutation: TOGGLE_TODO,\n      variables: { id: todo.id, isCompleted: !todo.is_completed },\n      optimisticResponse: {},\n      update: (cache) => {\n        const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n        const newTodos = existingTodos.todos.map(t => {\n          if (t.id === todo.id) {\n            return ({ ...t, is_completed: !t.is_completed });\n          } else {\n            return t;\n          }\n        });\n        cache.writeQuery({\n          query: GET_MY_TODOS,\n          data: { todos: newTodos }\n        });\n      }\n    });\n  };\n\n  return (\n    <li>\n      <div className=\"view\">\n        <div className=\"round\">\n          <input\n            checked={todo.is_completed}\n            type=\"checkbox\"\n            id={todo.id}\n            onChange={toggleTodo}\n          />\n          <label htmlFor={todo.id} />\n        </div>\n      </div>\n\n      <div className={\"labelContent\" + (todo.is_completed ? \" completed\" : '')}>\n        <div>\n          {todo.title}\n        </div>\n      </div>\n\n      <button className=\"closeBtn\" onClick={removeTodo}>\n        x\n      </button>\n    </li>\n  );\n};\n\nexport default withApollo(TodoItem);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nconst TodoFilters = ({\n  todos,\n  currentFilter,\n  filterResultsFn,\n  clearCompletedFn\n}) => {\n  const filterResultsHandler = (filter) => {\n    return () => {\n      filterResultsFn(filter);\n    }\n  };\n\n  // The clear completed button if these are personal todos\n  const clearCompletedButton = (\n    <button onClick={clearCompletedFn} className=\"clearComp\">\n      Clear completed\n    </button>\n  );\n\n  const activeTodos = todos.filter(todo => todo.is_completed !== true);\n\n  let itemCount = todos.length;\n  if (currentFilter === 'active') {\n    itemCount = activeTodos.length;\n  } else if (currentFilter === 'completed') {\n    itemCount = todos.length - activeTodos.length;\n  }\n\n  return (\n    <div className=\"footerList\">\n      <span> {itemCount} item{itemCount !== 1 ? \"s\" : \"\"}</span>\n\n      <ul>\n        <li onClick={filterResultsHandler(\"all\")}>\n          <a className={currentFilter === \"all\" ? \"selected\" : \"\"}>\n            All\n          </a>\n        </li>\n\n        <li onClick={filterResultsHandler(\"active\")}>\n          <a className={currentFilter === \"active\" ? \"selected\" : \"\"}>\n            Active\n          </a>\n        </li>\n\n        <li onClick={filterResultsHandler(\"completed\")}>\n          <a className={currentFilter === \"completed\" ? \"selected\" : \"\"}>\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {clearCompletedButton}\n    </div>\n  );\n};\n\nexport default TodoFilters;\n","import React, { Component, Fragment } from \"react\";\n\nimport TodoItem from \"./TodoItem\";\nimport TodoFilters from \"./TodoFilters\";\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo';\n\nconst GET_MY_TODOS = gql`\n  query getMyTodos {\n    todos(where: { is_public: { _eq: false} }, order_by: { created_at: desc }) {\n      id\n      title\n      created_at\n      is_completed\n    }\n  }\n`\n\nclass TodoPrivateList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filter: \"all\",\n      clearInProgress: false,\n    };\n\n    this.filterResults = this.filterResults.bind(this);\n    this.clearCompleted = this.clearCompleted.bind(this);\n\n    this.client = props.client;\n  }\n\n  filterResults(filter) {\n    this.setState({\n      ...this.state,\n      filter: filter\n    });\n  }\n\n  clearCompleted() {\n    // Remove all the todos that are completed\n    const CLEAR_COMPLETED = gql`\n      mutation clearCompleted {\n        delete_todos(where: {is_completed: {_eq: true}, is_public: {_eq: false}}) {\n          affected_rows\n        }\n      }\n    `;\n    this.client.mutate({\n      mutation: CLEAR_COMPLETED,\n      optimisticResponse: {},\n      update: (cache, { data }) => {\n        const existingTodos = cache.readQuery({ query: GET_MY_TODOS });\n        const newTodos = existingTodos.todos.filter(t => (!t.is_completed));\n        cache.writeQuery({ query: GET_MY_TODOS, data: { todos: newTodos } });\n      }\n    });\n  }\n\n  render() {\n    const { todos } = this.props;\n\n    let filteredTodos = todos;\n\n    if (this.state.filter === \"active\") {\n      filteredTodos = todos.filter(todo => todo.is_completed !== true);\n    } else if (this.state.filter === \"completed\") {\n      filteredTodos = todos.filter(todo => todo.is_completed === true);\n    }\n\n    const todoList = [];\n    filteredTodos.forEach((todo, index) => {\n      todoList.push(\n        <TodoItem\n          key={index}\n          index={index}\n          todo={todo}\n        />\n      );\n    });\n\n    return (\n      <Fragment>\n        <div className=\"todoListWrapper\">\n          <ul>\n            {todoList}\n          </ul>\n        </div>\n\n        <TodoFilters\n          todos={filteredTodos}\n          currentFilter={this.state.filter}\n          filterResultsFn={this.filterResults}\n          clearCompletedFn={this.clearCompleted}\n          clearInProgress={this.state.clearInProgress}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst TodoPrivateListQuery = () => {\n  return (\n    <Query query={GET_MY_TODOS}>\n      {({ loading, error, data, client }) => {\n        if (loading) {\n          return (<div>Loading...</div>);\n        }\n        if (error) {\n          console.error(error);\n          return (<div>Error!</div>);\n        }\n        return (<TodoPrivateList client={client} todos={data.todos} />);\n      }}\n    </Query>\n  );\n};\n\nexport default TodoPrivateListQuery;\nexport { GET_MY_TODOS }\n","import React, {useState} from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport {GET_MY_TODOS} from './TodoPrivateList';\n\nconst ADD_TODO = gql`\nmutation ($todo: String!, $isPublic: Boolean!) {\n  insert_todos(objects: {title: $todo, is_public: $isPublic}) {\n    affected_rows\n    returning {\n      id\n      title\n      created_at\n      is_completed\n    }\n  }\n}\n`;\n\nconst TodoInput = ({ isPublic = false }) => {\n  let input\n\n  const [todoInput, setTodoInput] = useState('');\n  \n  const updateCache = (cache, {data}) => {\n    // If this is for the public feed, do nothing\n    if (isPublic) {\n      return null;\n    }\n    // Fetch the todos from the cache\n    const existingTodos = cache.readQuery({\n      query: GET_MY_TODOS\n    });\n    // Add the new todo to the cache\n    const newTodo = data.insert_todos.returning[0];\n    cache.writeQuery({\n      query: GET_MY_TODOS,\n      data: {todos: [newTodo, ...existingTodos.todos]}\n    });\n  };\n  const resetInput = () => {\n    setTodoInput('');\n    input.focus();\n  };\n  \n  return (\n    <Mutation mutation={ADD_TODO} update={updateCache} onCompleted={resetInput}>\n      {(addTodo, { loading, data }) => {\n        return (\n          <form className=\"formInput\" onSubmit={(e) => {\n          e.preventDefault();\n          addTodo({variables: {todo: todoInput, isPublic}})\n        }}>\n          <input\n            className=\"input\"\n            placeholder=\"What needs to be done?\"\n            value={todoInput}\n            onChange={e => (setTodoInput(e.target.value))}\n            ref={n => (input = n)}\n          />\n          <i className=\"inputMarker fa fa-angle-right\" />\n        </form>\n        )\n      }}\n    </Mutation>\n  );\n};\n\nexport default TodoInput;\n","import React, { Component } from \"react\";\n\nimport TodoInput from \"./TodoInput\";\nimport TodoPrivateList from \"./TodoPrivateList\";\n\nclass TodoPrivateWrapper extends Component {\n  render() {\n    return (\n      <div className=\"todoWrapper\">\n        <div className=\"sectionHeader\">Personal todos</div>\n\n        <TodoInput />\n        <TodoPrivateList />\n      </div>\n    );\n  }\n}\n\nexport default TodoPrivateWrapper;\n","import React from 'react'\n\nconst TaskItem = ({index, todo}) => {\n  return (\n    <li>\n\n      <div className=\"userInfoPublic\" title={todo.user.name}>\n        @{todo.user.name}\n      </div>\n\n      <div className={\"labelContent\" + (todo.is_completed ? \" completed\" : '')}>\n        <div>\n          {todo.title}\n        </div>\n      </div>\n\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import React, { Component, Fragment } from 'react';\nimport {Subscription, withApollo} from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport TaskItem from \"./TaskItem\";\n\nclass _TodoPublicList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      olderTodosAvailable: props.latestTodo ? true : false,\n      newTodosCount: 0,\n      todos: [],\n      error: false\n    };\n\n    this.loadNew = this.loadNew.bind(this);\n    this.loadOlder = this.loadOlder.bind(this);\n    this.client = props.client;\n    this.oldestTodoId = props.latestTodo.id + 1;\n    this.newestTodoId = props.latestTodo.id;\n  }\n\n  loadNew() {\n    const GET_NEW_PUBLIC_TODOS = gql`\n     query getNewPublicTodos ($latestVisibleId: Int!) {\n       todos(where: { is_public: { _eq: true}, id: {_gt: $latestVisibleId}}, order_by: { created_at: desc }) {\n         id\n         title\n         created_at\n         user {\n           name\n         }\n       }\n     }\n   `;\n   this.client.query({\n     query: GET_NEW_PUBLIC_TODOS,\n     variables: {latestVisibleId: this.state.todos[0].id}\n   })\n   .then(({data}) => {\n     this.newestTodoId = data.todos[0].id;\n     this.setState({todos: [...data.todos, ...this.state.todos], newTodosCount: 0});\n   })\n   .catch(error => {\n     console.error(error);\n     this.setState({error: true});\n   });\n  }\n\n  loadOlder() {\n    const GET_OLD_PUBLIC_TODOS = gql`\n      query getOldPublicTodos ($oldestTodoId: Int!) {\n        todos (where: { is_public: { _eq: true}, id: {_lt: $oldestTodoId}}, limit: 7, order_by: { created_at: desc }) {\n          id\n          title\n          created_at\n          user {\n            name\n          }\n        }\n      }`;\n    this.client.query({\n      query: GET_OLD_PUBLIC_TODOS,\n      variables: {oldestTodoId: (this.oldestTodoId)}\n    })\n    .then(({data}) => {\n      if (data.todos.length) {\n        this.oldestTodoId = data.todos[data.todos.length - 1].id;\n        this.setState({todos: [...this.state.todos, ...data.todos]});\n      } else {\n        this.setState({olderTodosAvailable: false});\n      }\n    })\n    .catch(error => {\n      console.error(error);\n      this.setState({error: true});\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Do we have a new todo available?\n    if (this.props.latestTodo.id > this.newestTodoId) {\n      this.newestTodoId = this.props.latestTodo.id;\n      this.setState({newTodosCount: this.state.newTodosCount + 1});\n    }\n   }\n\n  componentDidMount() {\n    this.loadOlder();\n  }\n\n  render() {\n\n    let todos = this.state.todos;\n\n    const todoList = (\n      <ul>\n        {\n          todos.map((todo, index) => {\n            return (\n              <TaskItem\n                key={index}\n                index={index}\n                todo={todo}\n              />\n            );\n          })\n        }\n      </ul>\n    );\n\n    let newTodosNotification = '';\n    if (this.state.newTodosCount) {\n      newTodosNotification = (\n        <div className={\"loadMoreSection\"} onClick={this.loadNew}>\n          New tasks have arrived! ({this.state.newTodosCount.toString()})\n        </div>\n      );\n    }\n\n    const olderTodosMsg = (\n      <div className={\"loadMoreSection\"} onClick={this.loadOlder}>\n        { this.state.olderTodosAvailable ? 'Load older tasks' : 'No more public tasks!'}\n      </div>\n    );\n\n    return (\n      <Fragment>\n        <div className=\"todoListWrapper\">\n          { newTodosNotification }\n\n          { todoList }\n\n          { olderTodosMsg }\n        </div>\n      </Fragment>\n    );\n  }\n}\nconst TodoPublicList = withApollo(_TodoPublicList);\n\nconst NOTIFY_NEW_PUBLIC_TODOS = gql`\nsubscription notifyNewPublicTodos {\n  todos (where: { is_public: { _eq: true}}, limit: 1, order_by: {created_at: desc }) {\n    id\n    created_at\n  }\n}\n`;\n\nconst TodoPublicListSubscription = () => {\n  return (\n    <Subscription subscription={NOTIFY_NEW_PUBLIC_TODOS}>\n      {({loading, error, data}) => {\n        if (loading) {\n          return (<span>Loading...</span>);\n        }\n        if (error) {\n          return (<span>Error</span>);\n        }\n        return (<TodoPublicList latestTodo={data.todos.length ? data.todos[0] : null} />);\n      }}\n    </Subscription>\n  );\n };\n\n export default TodoPublicListSubscription;\n","import React from 'react';\n\nimport TodoInput from './TodoInput';\nimport TodoPublicList from './TodoPublicList';\n\nconst TodoPublicWrapper = () => {\n  return (\n    <div className=\"todoWrapper\">\n      <div className=\"sectionHeader\">Public feed (realtime)</div>\n\n      <TodoInput isPublic />\n      <TodoPublicList />\n    </div>\n  );\n};\n\nexport default TodoPublicWrapper;\n","import React from \"react\";\n\nconst OnlineUser = ({user}) => {\n  return (\n    <div className=\"userInfo\">\n      <div className=\"userImg\">\n        <i className=\"far fa-user\" />\n      </div>\n      <div className=\"userName\">\n        {user.name}\n      </div>\n    </div>\n  );\n};\n\nexport default OnlineUser;\n","import React, { Component, Fragment } from \"react\";\nimport OnlineUser from \"./OnlineUser\";\nimport gql from \"graphql-tag\";\nimport { withApollo, Subscription } from 'react-apollo';\n\nclass OnlineUsersWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.client = props.client\n    \n  }\n\n  updateLastSeen() {\n    // Use the apollo client to run a mutation to update the last_seen value\n    const UPDATE_LASTSEEN_MUTATION = gql`\n      mutation updateLastSeen ($now: timestamptz!) {\n        update_users(where: {}, _set: {last_seen: $now}) {\n          affected_rows\n        }\n      }`;\n    this.client.mutate({\n      mutation: UPDATE_LASTSEEN_MUTATION,\n      variables: { now: (new Date()).toISOString() }\n    });\n  }\n\n  componentDidMount() {\n    // Every 30s, run a mutation to tell the backend that you're online\n    this.onlineIndicator = setInterval(() => this.updateLastSeen(), 30000);\n  }\n\n  render() {\n    \n\n    return (\n      <div className=\"onlineUsersWrapper\">\n        <Subscription subscription={gql`\n      subscription getOnlineUsers {\n        online_users(order_by: {user: {name: asc }}) {\n          id\n          user {\n            name\n          }\n        }\n      }`}>\n          {({ loading, error, data }) => {\n            if (loading) {\n              return (<span>Loading...</span>);\n            }\n            if (error) {\n              console.error(error);\n              return (<span>Error!</span>);\n            }\n            if (data) {\n              const users = data.online_users;\n              const onlineUsersList = [];\n              users.forEach((u, index) => {\n                onlineUsersList.push(\n                  <OnlineUser\n                    key={index}\n                    index={index}\n                    user={u.user}\n                  />);\n              });\n              return (\n                <Fragment>\n                  <div className=\"sliderHeader\">\n                    Online users - {users.length}\n                  </div>\n                  {onlineUsersList}\n                </Fragment>\n              );\n            }\n          }}\n        </Subscription>\n      </div>\n    );\n  }\n}\n\nexport default withApollo(OnlineUsersWrapper);\n","import React from 'react';\n\nimport Header from './Header';\nimport TodoPrivateWrapper from './Todo/TodoPrivateWrapper';\nimport TodoPublicWrapper from './Todo/TodoPublicWrapper';\nimport OnlineUsersWrapper from './OnlineUsers/OnlineUsersWrapper';\n\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from 'react-apollo';\n\nimport { WebSocketLink } from 'apollo-link-ws';\n\nconst createApolloClient = (authToken) => {\n  return new ApolloClient({\n   link: new WebSocketLink({\n     uri: 'wss://learn.hasura.io/graphql',\n     options: {\n       reconnect: true,\n       connectionParams: {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          }\n       }\n     }\n    }),\n    cache: new InMemoryCache(),\n  });\n};\nconst App = ({auth}) => {\n  const client = createApolloClient(auth.idToken)\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <Header logoutHandler={auth.logout} />\n        <div className=\"container-fluid p-left-right-0\">\n          <div className=\"col-xs-12 col-md-9 p-left-right-0\">\n            <div className=\"col-xs-12 col-md-6 sliderMenu p-30\">\n              <TodoPrivateWrapper />\n            </div>\n            <div className=\"col-xs-12 col-md-6 sliderMenu p-30 bg-gray border-right\">\n              <TodoPublicWrapper />\n            </div>\n          </div>\n          <div className=\"col-xs-12 col-md-3 p-left-right-0\">\n            <div className=\"col-xs-12 col-md-12 sliderMenu p-30 bg-gray\">\n              <OnlineUsersWrapper />\n            </div>\n          </div>\n        </div>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;","import React, { Component } from \"react\";\nimport loading from \"./loading.svg\";\n\nclass Callback extends Component {\n  render() {\n    const style = {\n      position: \"absolute\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      width: \"100vw\",\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: \"white\"\n    };\n\n    return (\n      <div style={style}>\n        <img src={loading} alt=\"loading\" />\n      </div>\n    );\n  }\n}\n\nexport default Callback;\n","import React from \"react\";\nimport {Button} from \"react-bootstrap\";\n\nconst Login = ({loginHandler}) => (\n<div className=\"overlay\">\n  <div className=\"overlay-content\">\n    <div className=\"overlay-heading\">\n      Welcome to the GraphQL tutorial app\n    </div>\n    <div className=\"overlay-message\">\n      Please login to continue\n    </div>\n    <div className=\"overlay-action\">\n      <Button\n        id=\"qsLoginBtn\"\n        bsStyle=\"primary\"\n        className=\"btn-margin loginBtn\"\n        onClick={loginHandler}>\n        Log In\n      </Button>\n    </div>\n  </div>\n</div>\n);\n\nexport default Login;\n","import React from 'react';\nimport auth0 from 'auth0-js';\n\nimport history from '../../utils/history';\nimport {AUTH_CONFIG} from './auth0-variables';\nimport App from '../App';\nimport Callback from './Callback';\nimport Login from './Login';\n\nexport default class Auth0Wrapper extends React.Component {\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    audience: `https://${AUTH_CONFIG.domain}/userinfo`,\n    responseType: 'token id_token',\n    scope: 'openid profile'\n  });\n\n  constructor() {\n    super();\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isExpired = this.isExpired.bind(this);\n    this.getAccessToken = this.getAccessToken.bind(this);\n    this.getIdToken = this.getIdToken.bind(this);\n    this.renewSession = this.renewSession.bind(this);\n\n    this.state = {\n      isAuthenticated: false, // This can be true, false, 'loading'\n      idToken: null\n    };\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication = () => {\n    this.setState({isAuthenticated: 'loading'});\n\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n      } else if (err) {\n        this.logout();\n        console.error(err);\n        alert(`Error: ${err.error} - ${err.errorDescription}`);\n      }\n    });\n  };\n\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  setSession(authResult) {\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n\n    // Set the time that the access token will expire at\n    let expiresAt = (authResult.expiresIn * 1000) + new Date().getTime();\n    this.accessToken = authResult.accessToken;\n    this.idToken = authResult.idToken;\n    this.expiresAt = expiresAt;\n\n    // navigate to the home route\n    history.replace('/');\n    this.setState({\n      isAuthenticated: true,\n      idToken: authResult.idToken\n    });\n  }\n\n  renewSession() {\n    this.setState({isAuthenticated: 'loading'});\n\n    this.auth0.checkSession({}, (err, authResult) => {\n       if (authResult && authResult.accessToken && authResult.idToken) {\n         this.setSession(authResult);\n       } else if (err) {\n         this.logout();\n         console.log(err);\n         alert(`Could not get a new token (${err.error}: ${err.error_description}).`);\n       }\n    });\n  }\n\n  logout() {\n    // Remove tokens and expiry time\n    this.accessToken = null;\n    this.idToken = null;\n    this.expiresAt = 0;\n\n    // Remove isLoggedIn flag from localStorage\n    localStorage.removeItem('isLoggedIn');\n\n    this.auth0.logout({\n      return_to: window.location.origin\n    });\n\n    // navigate to the home route\n    history.replace('/');\n    this.setState({\n      isAuthenticated: false,\n      idToken: null\n    });\n  }\n\n  isExpired () {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = this.expiresAt;\n    return new Date().getTime() > expiresAt;\n  }\n\n  componentDidMount() {\n    // If this is a callback URL then do the right things\n    const location = this.props.location;\n    if (location && location.pathname.startsWith('/callback') && /access_token|id_token|error/.test(location.hash)) {\n      this.handleAuthentication();\n      return;\n    }\n\n    // On first load, check if we are already logged in and get the idTokens and things\n    if(localStorage.getItem('isLoggedIn') === 'true') {\n      this.renewSession();\n      return;\n    }\n  }\n\n  render() {\n    if (this.state.isAuthenticated === 'loading') {\n      return (<Callback {...this.props} />);\n    }\n\n    if (!this.state.isAuthenticated) {\n      return (<Login loginHandler={this.login} />);\n    }\n\n    return (<App {...this.props} auth={{...this.state, login: this.login, logout: this.logout}} />);\n  }\n\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Route, Router } from \"react-router-dom\";\n\nimport './styles/App.css';\n\nimport Auth0Wrapper from \"./components/Auth/Auth0Wrapper\";\nimport history from \"./utils/history\";\n\nconst mainRoutes = (\n  <Router history={history}>\n    <Route path=\"/\" render={props => (<Auth0Wrapper {...props} />)} />\n  </Router>\n);\n\nReactDOM.render(mainRoutes, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";"],"sourceRoot":""}